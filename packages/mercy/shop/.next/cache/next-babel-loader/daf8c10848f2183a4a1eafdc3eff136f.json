{"ast":null,"code":"var _jsxFileName = \"/Users/ichenwu/code/mercy-app/shop/components/NavLink/NavLink-mercy.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport styled from 'styled-components';\nimport * as NextLink from 'next/link';\nimport { Link as RRLink } from 'react-router-dom';\nimport { withRouter } from 'next/router';\nimport { FormattedMessage } from 'react-intl';\nconst Icon = styled.span.withConfig({\n  displayName: \"NavLink-mercy__Icon\",\n  componentId: \"w6nhop-0\"\n})([\"min-width:16px;margin-right:10px;display:flex;align-items:center;justify-content:center;\"]);\n\nconst NavLink = ({\n  href,\n  label,\n  intlId,\n  router: {\n    pathname\n  },\n  icon,\n  className,\n  onClick,\n  iconClass,\n  ssr\n}) => {\n  pathname = pathname === '/' ? '/grocery' : pathname;\n  let Link;\n\n  if (ssr) {\n    Link = NextLink;\n  } else {\n    Link = RRLink;\n  }\n\n  return __jsx(\"div\", {\n    onClick: onClick,\n    className: className ? className : '',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, __jsx(Link, {\n    href: href,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, __jsx(\"a\", {\n    className: pathname === href ? ' current-page' : '',\n    style: {\n      display: 'flex',\n      alignItems: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, icon ? __jsx(Icon, {\n    className: iconClass,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, icon) : '', __jsx(\"span\", {\n    className: \"label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, intlId ? __jsx(FormattedMessage, {\n    id: intlId ? intlId : 'defaultNavLinkId',\n    defaultMessage: label,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }) : label))));\n};\n\nexport default withRouter(NavLink);","map":{"version":3,"sources":["/Users/ichenwu/code/mercy-app/shop/components/NavLink/NavLink-mercy.tsx"],"names":["React","styled","NextLink","Link","RRLink","withRouter","FormattedMessage","Icon","span","NavLink","href","label","intlId","router","pathname","icon","className","onClick","iconClass","ssr","display","alignItems"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAO,KAAKC,QAAZ,MAA0B,WAA1B;AACA,SAASC,IAAI,IAAIC,MAAjB,QAA+B,kBAA/B;AACA,SAASC,UAAT,QAA2B,aAA3B;AACA,SAASC,gBAAT,QAAiC,YAAjC;AAcA,MAAMC,IAAI,GAAGN,MAAM,CAACO,IAAV;AAAA;AAAA;AAAA,gGAAV;;AAQA,MAAMC,OAAgC,GAAG,CAAC;AACzCC,EAAAA,IADyC;AAEzCC,EAAAA,KAFyC;AAGzCC,EAAAA,MAHyC;AAIzCC,EAAAA,MAAM,EAAE;AAAEC,IAAAA;AAAF,GAJiC;AAKzCC,EAAAA,IALyC;AAMzCC,EAAAA,SANyC;AAOzCC,EAAAA,OAPyC;AAQzCC,EAAAA,SARyC;AASzCC,EAAAA;AATyC,CAAD,KAUnC;AACLL,EAAAA,QAAQ,GAAGA,QAAQ,KAAK,GAAb,GAAmB,UAAnB,GAAgCA,QAA3C;AACA,MAAIX,IAAJ;;AACA,MAAIgB,GAAJ,EAAS;AACRhB,IAAAA,IAAI,GAAGD,QAAP;AACA,GAFD,MAEO;AACNC,IAAAA,IAAI,GAAGC,MAAP;AACA;;AACD,SACC;AAAK,IAAA,OAAO,EAAEa,OAAd;AAAuB,IAAA,SAAS,EAAED,SAAS,GAAGA,SAAH,GAAe,EAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,MAAC,IAAD;AAAM,IAAA,IAAI,EAAEN,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AACC,IAAA,SAAS,EAAEI,QAAQ,KAAKJ,IAAb,GAAoB,eAApB,GAAsC,EADlD;AAEC,IAAA,KAAK,EAAE;AAAEU,MAAAA,OAAO,EAAE,MAAX;AAAmBC,MAAAA,UAAU,EAAE;AAA/B,KAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIEN,IAAI,GAAG,MAAC,IAAD;AAAM,IAAA,SAAS,EAAEG,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6BH,IAA7B,CAAH,GAA+C,EAJrD,EAMC;AAAM,IAAA,SAAS,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEH,MAAM,GACN,MAAC,gBAAD;AACC,IAAA,EAAE,EAAEA,MAAM,GAAGA,MAAH,GAAY,kBADvB;AAEC,IAAA,cAAc,EAAED,KAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADM,GAMNA,KAPF,CAND,CADD,CADD,CADD;AAuBA,CAzCD;;AA2CA,eAAeN,UAAU,CAACI,OAAD,CAAzB","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport * as NextLink from 'next/link';\nimport { Link as RRLink } from 'react-router-dom';\nimport { withRouter } from 'next/router';\nimport { FormattedMessage } from 'react-intl';\n\ntype NavLinkProps = {\n\trouter: any;\n\thref: string;\n\tlabel: string;\n\tintlId?: string;\n\ticon?: React.ReactNode;\n\tclassName?: string;\n\ticonClass?: string;\n\tonClick?: () => void;\n\tssr?: boolean;\n};\n\nconst Icon = styled.span`\n\tmin-width: 16px;\n\tmargin-right: 10px;\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: center;\n`;\n\nconst NavLink: React.SFC<NavLinkProps> = ({\n\thref,\n\tlabel,\n\tintlId,\n\trouter: { pathname },\n\ticon,\n\tclassName,\n\tonClick,\n\ticonClass,\n\tssr\n}) => {\n\tpathname = pathname === '/' ? '/grocery' : pathname;\n\tlet Link;\n\tif (ssr) {\n\t\tLink = NextLink;\n\t} else {\n\t\tLink = RRLink;\n\t}\n\treturn (\n\t\t<div onClick={onClick} className={className ? className : ''}>\n\t\t\t<Link href={href}>\n\t\t\t\t<a\n\t\t\t\t\tclassName={pathname === href ? ' current-page' : ''}\n\t\t\t\t\tstyle={{ display: 'flex', alignItems: 'center' }}\n\t\t\t\t>\n\t\t\t\t\t{icon ? <Icon className={iconClass}>{icon}</Icon> : ''}\n\n\t\t\t\t\t<span className=\"label\">\n\t\t\t\t\t\t{intlId ? (\n\t\t\t\t\t\t\t<FormattedMessage\n\t\t\t\t\t\t\t\tid={intlId ? intlId : 'defaultNavLinkId'}\n\t\t\t\t\t\t\t\tdefaultMessage={label}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\tlabel\n\t\t\t\t\t\t)}\n\t\t\t\t\t</span>\n\t\t\t\t</a>\n\t\t\t</Link>\n\t\t</div>\n\t);\n};\n\nexport default withRouter(NavLink);\n"]},"metadata":{},"sourceType":"module"}