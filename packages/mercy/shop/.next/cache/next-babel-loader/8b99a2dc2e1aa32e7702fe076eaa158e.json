{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime-corejs2/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/ichenwu/code/mercy-app/shop/components/NavLink/NavLink-mercy.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport styled from 'styled-components';\nimport * as NextLink from 'next/link';\nimport { Link as RRLink } from 'react-router-dom';\nimport { withRouter } from 'next/router';\nimport { FormattedMessage } from 'react-intl';\nvar Icon = styled.span.withConfig({\n  displayName: \"NavLink-mercy__Icon\",\n  componentId: \"w6nhop-0\"\n})([\"min-width:16px;margin-right:10px;display:flex;align-items:center;justify-content:center;\"]);\n\nvar NavLink = function NavLink(_ref) {\n  var href = _ref.href,\n      label = _ref.label,\n      intlId = _ref.intlId,\n      icon = _ref.icon,\n      className = _ref.className,\n      onClick = _ref.onClick,\n      iconClass = _ref.iconClass,\n      ssr = _ref.ssr,\n      rest = _objectWithoutProperties(_ref, [\"href\", \"label\", \"intlId\", \"icon\", \"className\", \"onClick\", \"iconClass\", \"ssr\"]);\n\n  var pathname;\n\n  if (ssr) {\n    pathname = rest.router.pathname;\n  } else {\n    pathname = window.location.pathname;\n  }\n\n  return __jsx(\"div\", {\n    onClick: onClick,\n    className: className ? className : '',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, ssr ? __jsx(NextLink, {\n    href: href,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, __jsx(\"a\", {\n    className: pathname === href ? ' current-page' : '',\n    style: {\n      display: 'flex',\n      alignItems: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, icon ? __jsx(Icon, {\n    className: iconClass,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, icon) : '', __jsx(\"span\", {\n    className: \"label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, intlId ? __jsx(FormattedMessage, {\n    id: intlId ? intlId : 'defaultNavLinkId',\n    defaultMessage: label,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }) : label))) : __jsx(RRLink, {\n    to: href,\n    className: pathname === href ? ' current-page' : '',\n    style: {\n      display: 'flex',\n      alignItems: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, icon ? __jsx(Icon, {\n    className: iconClass,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, icon) : '', __jsx(\"span\", {\n    className: \"label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, intlId ? __jsx(FormattedMessage, {\n    id: intlId ? intlId : 'defaultNavLinkId',\n    defaultMessage: label,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }) : label)));\n};\n\nexport default withRouter(NavLink);","map":{"version":3,"sources":["/Users/ichenwu/code/mercy-app/shop/components/NavLink/NavLink-mercy.tsx"],"names":["React","styled","NextLink","Link","RRLink","withRouter","FormattedMessage","Icon","span","NavLink","href","label","intlId","icon","className","onClick","iconClass","ssr","rest","pathname","router","window","location","display","alignItems"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAO,KAAKC,QAAZ,MAA0B,WAA1B;AACA,SAASC,IAAI,IAAIC,MAAjB,QAA+B,kBAA/B;AACA,SAASC,UAAT,QAA2B,aAA3B;AACA,SAASC,gBAAT,QAAiC,YAAjC;AAcA,IAAMC,IAAI,GAAGN,MAAM,CAACO,IAAV;AAAA;AAAA;AAAA,gGAAV;;AAQA,IAAMC,OAAgC,GAAG,SAAnCA,OAAmC,OAWnC;AAAA,MAVLC,IAUK,QAVLA,IAUK;AAAA,MATLC,KASK,QATLA,KASK;AAAA,MARLC,MAQK,QARLA,MAQK;AAAA,MANLC,IAMK,QANLA,IAMK;AAAA,MALLC,SAKK,QALLA,SAKK;AAAA,MAJLC,OAIK,QAJLA,OAIK;AAAA,MAHLC,SAGK,QAHLA,SAGK;AAAA,MAFLC,GAEK,QAFLA,GAEK;AAAA,MADFC,IACE;;AACL,MAAIC,QAAJ;;AACA,MAAIF,GAAJ,EAAS;AACRE,IAAAA,QAAQ,GAAGD,IAAI,CAACE,MAAL,CAAYD,QAAvB;AACA,GAFD,MAEO;AACNA,IAAAA,QAAQ,GAAGE,MAAM,CAACC,QAAP,CAAgBH,QAA3B;AACA;;AAED,SACC;AAAK,IAAA,OAAO,EAAEJ,OAAd;AAAuB,IAAA,SAAS,EAAED,SAAS,GAAGA,SAAH,GAAe,EAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEG,GAAG,GACH,MAAC,QAAD;AAAU,IAAA,IAAI,EAAEP,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AACC,IAAA,SAAS,EAAES,QAAQ,KAAKT,IAAb,GAAoB,eAApB,GAAsC,EADlD;AAEC,IAAA,KAAK,EAAE;AAAEa,MAAAA,OAAO,EAAE,MAAX;AAAmBC,MAAAA,UAAU,EAAE;AAA/B,KAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIEX,IAAI,GAAG,MAAC,IAAD;AAAM,IAAA,SAAS,EAAEG,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6BH,IAA7B,CAAH,GAA+C,EAJrD,EAMC;AAAM,IAAA,SAAS,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACED,MAAM,GACN,MAAC,gBAAD;AACC,IAAA,EAAE,EAAEA,MAAM,GAAGA,MAAH,GAAY,kBADvB;AAEC,IAAA,cAAc,EAAED,KAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADM,GAMNA,KAPF,CAND,CADD,CADG,GAqBH,MAAC,MAAD;AACC,IAAA,EAAE,EAAED,IADL;AAEC,IAAA,SAAS,EAAES,QAAQ,KAAKT,IAAb,GAAoB,eAApB,GAAsC,EAFlD;AAGC,IAAA,KAAK,EAAE;AAAEa,MAAAA,OAAO,EAAE,MAAX;AAAmBC,MAAAA,UAAU,EAAE;AAA/B,KAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKEX,IAAI,GAAG,MAAC,IAAD;AAAM,IAAA,SAAS,EAAEG,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6BH,IAA7B,CAAH,GAA+C,EALrD,EAMC;AAAM,IAAA,SAAS,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACED,MAAM,GACN,MAAC,gBAAD;AACC,IAAA,EAAE,EAAEA,MAAM,GAAGA,MAAH,GAAY,kBADvB;AAEC,IAAA,cAAc,EAAED,KAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADM,GAMNA,KAPF,CAND,CAtBF,CADD;AA2CA,CA9DD;;AAgEA,eAAeN,UAAU,CAACI,OAAD,CAAzB","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport * as NextLink from 'next/link';\nimport { Link as RRLink } from 'react-router-dom';\nimport { withRouter } from 'next/router';\nimport { FormattedMessage } from 'react-intl';\n\ntype NavLinkProps = {\n\trouter: any;\n\thref: string;\n\tlabel: string;\n\tintlId?: string;\n\ticon?: React.ReactNode;\n\tclassName?: string;\n\ticonClass?: string;\n\tonClick?: () => void;\n\tssr?: boolean;\n};\n\nconst Icon = styled.span`\n\tmin-width: 16px;\n\tmargin-right: 10px;\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: center;\n`;\n\nconst NavLink: React.SFC<NavLinkProps> = ({\n\thref,\n\tlabel,\n\tintlId,\n\t// router: { pathname },\n\ticon,\n\tclassName,\n\tonClick,\n\ticonClass,\n\tssr,\n\t...rest\n}) => {\n\tlet pathname;\n\tif (ssr) {\n\t\tpathname = rest.router.pathname;\n\t} else {\n\t\tpathname = window.location.pathname;\n\t}\n\n\treturn (\n\t\t<div onClick={onClick} className={className ? className : ''}>\n\t\t\t{ssr ? (\n\t\t\t\t<NextLink href={href}>\n\t\t\t\t\t<a\n\t\t\t\t\t\tclassName={pathname === href ? ' current-page' : ''}\n\t\t\t\t\t\tstyle={{ display: 'flex', alignItems: 'center' }}\n\t\t\t\t\t>\n\t\t\t\t\t\t{icon ? <Icon className={iconClass}>{icon}</Icon> : ''}\n\n\t\t\t\t\t\t<span className=\"label\">\n\t\t\t\t\t\t\t{intlId ? (\n\t\t\t\t\t\t\t\t<FormattedMessage\n\t\t\t\t\t\t\t\t\tid={intlId ? intlId : 'defaultNavLinkId'}\n\t\t\t\t\t\t\t\t\tdefaultMessage={label}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\tlabel\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</a>\n\t\t\t\t</NextLink>\n\t\t\t) : (\n\t\t\t\t<RRLink\n\t\t\t\t\tto={href}\n\t\t\t\t\tclassName={pathname === href ? ' current-page' : ''}\n\t\t\t\t\tstyle={{ display: 'flex', alignItems: 'center' }}\n\t\t\t\t>\n\t\t\t\t\t{icon ? <Icon className={iconClass}>{icon}</Icon> : ''}\n\t\t\t\t\t<span className=\"label\">\n\t\t\t\t\t\t{intlId ? (\n\t\t\t\t\t\t\t<FormattedMessage\n\t\t\t\t\t\t\t\tid={intlId ? intlId : 'defaultNavLinkId'}\n\t\t\t\t\t\t\t\tdefaultMessage={label}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\tlabel\n\t\t\t\t\t\t)}\n\t\t\t\t\t</span>\n\t\t\t\t</RRLink>\n\t\t\t)}\n\t\t</div>\n\t);\n};\n\nexport default withRouter(NavLink);\n"]},"metadata":{},"sourceType":"module"}