{"version":3,"file":"static/webpack/static/development/pages/_app.js.d295bcea332bd4548bbe.hot-update.js","sources":["webpack:///./components/NavLink/NavLink-mercy.tsx"],"sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport * as NextLink from 'next/link';\nimport { Link as RRLink } from 'react-router-dom';\nimport { withRouter } from 'next/router';\nimport { FormattedMessage } from 'react-intl';\n\ntype NavLinkProps = {\n\trouter: any;\n\thref: string;\n\tlabel: string;\n\tintlId?: string;\n\ticon?: React.ReactNode;\n\tclassName?: string;\n\ticonClass?: string;\n\tonClick?: () => void;\n\tssr?: boolean;\n};\n\nconst Icon = styled.span`\n\tmin-width: 16px;\n\tmargin-right: 10px;\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: center;\n`;\n\nconst NavLink: React.SFC<NavLinkProps> = ({\n\thref,\n\tlabel,\n\tintlId,\n\t// router: { pathname },\n\ticon,\n\tclassName,\n\tonClick,\n\ticonClass,\n\tssr,\n\t...rest\n}) => {\n\tlet Link, pathname;\n\tif (ssr) {\n\t\tLink = NextLink;\n\t\tpathname = rest.router.pathname;\n\t} else {\n\t\tLink = RRLink;\n\t\tpathname = window.location.pathname;\n\t}\n\n\treturn (\n\t\t<div onClick={onClick} className={className ? className : ''}>\n\t\t\t<Link to={href} href={href}>\n\t\t\t\t<a\n\t\t\t\t\tclassName={pathname === href ? ' current-page' : ''}\n\t\t\t\t\tstyle={{ display: 'flex', alignItems: 'center' }}\n\t\t\t\t>\n\t\t\t\t\t{icon ? <Icon className={iconClass}>{icon}</Icon> : ''}\n\n\t\t\t\t\t<span className=\"label\">\n\t\t\t\t\t\t{intlId ? (\n\t\t\t\t\t\t\t<FormattedMessage\n\t\t\t\t\t\t\t\tid={intlId ? intlId : 'defaultNavLinkId'}\n\t\t\t\t\t\t\t\tdefaultMessage={label}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\tlabel\n\t\t\t\t\t\t)}\n\t\t\t\t\t</span>\n\t\t\t\t</a>\n\t\t\t</Link>\n\t\t</div>\n\t);\n};\n\nexport default withRouter(NavLink);\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAcA;AAAA;AAAA;AAAA;AACA;AAOA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;AACA;AACA;;;;A","sourceRoot":""}